{"version":3,"file":"13.5e53dfc901efe29d4cf0.bundle.js","sources":["webpack:///./packages/Button/src/index.tsx"],"sourcesContent":["import withUtils from \"@blaze-react/utils\";\nimport React, { ButtonHTMLAttributes } from \"react\";\n\ntype TType = \"button\" | \"submit\" | \"reset\";\n\ninterface IButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  disabled?: boolean;\n  children?: JSX.Element | string;\n  type?: TType;\n  modifiers?: string[];\n  utils: {\n    buildClassNames: (className: string | object, optionalClassNames?: object) => string;\n  };\n}\n\nconst Button = withUtils(\n  ({\n    disabled,\n    type,\n    children,\n    modifiers = [],\n    utils: { buildClassNames },\n    ...attrs\n  }: IButtonProps): JSX.Element => {\n    const formatedModifiers: string = modifiers\n      .map((modifier) => `button--${modifier}`)\n      .join(\" \");\n    const buttonClassNames: string = buildClassNames(\"button\", {\n      [formatedModifiers]: !!modifiers,\n    });\n\n    return (\n      <button\n        disabled={disabled}\n        className={buttonClassNames}\n        type={type}\n        {...attrs}\n      >\n        {children}\n      </button>\n    );\n  }\n);\n\nButton.defaultProps = {\n  children: \"\",\n  disabled: false,\n  type: \"button\",\n};\n\nexport default Button;\n"],"mappings":"AAAA","sourceRoot":""}