{"version":3,"file":"24.3cb1b6735a89f32a6605.bundle.js","sources":["webpack:///./packages/RangeSlider/src/index.tsx"],"sourcesContent":["import WithUtils from \"@blaze-react/utils\";\nimport React, { useState } from \"react\";\nimport InputRange from 'react-input-range';\n\ninterface IRange {\n  max: number;\n  min: number;\n}\n\ninterface IRangeSliderProps {\n  allowSameValues?: boolean;\n  disabled?: boolean;\n  draggableTrack?: boolean;\n  maxValue?: number;\n  minValue?: number;\n  name?: string;\n  onChange?: (value: IRange | number) => void\n  step?: number;\n  value?: IRange | number\n}\nconst RangeSlider: React.SFC<IRangeSliderProps> = ({\n  allowSameValues,\n  disabled,\n  draggableTrack,\n  maxValue,\n  minValue,\n  name,\n  onChange,\n  step,\n  value\n}) => {\n  const [updatedValue, setUpdatedValue] = useState<IRange | number>(value || 0);\n\n  const handleChange = (newValue: IRange | number) => {\n    setUpdatedValue(newValue);\n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  return (\n    <InputRange\n      allowSameValues={allowSameValues}\n      disabled={disabled}\n      draggableTrack={draggableTrack}\n      maxValue={maxValue}\n      minValue={minValue}\n      name={name}\n      onChange={handleChange}\n      step={step}\n      value={updatedValue}\n    />\n  );\n};\nRangeSlider.defaultProps = {\n  allowSameValues: false,\n  disabled: false,\n  draggableTrack: false,\n  maxValue: 10,\n  minValue: 0,\n  name: '',\n  onChange: (): void => {\n    return;\n  },\n  step: 1\n};\nexport default WithUtils(RangeSlider);"],"mappings":"AAAA","sourceRoot":""}