{"version":3,"file":"14.116dd031cea0a4848e2f.bundle.js","sources":["webpack:///./packages/Dropdown/src/index.tsx"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\ninterface IDropdownProps {\n  label?: string;\n  children?: any;\n}\nconst Dropdown: React.SFC<IDropdownProps> = ({ label, children }) => {\n  const [toggled, setToggled] = useState(\"close\");\n  const toggleMenu = () => {\n    const menuStatus = toggled === \"close\" ? \"open\" : \"close\";\n    setToggled(menuStatus);\n  };\n  return (\n    <Fragment>\n      <div className=\"more-menu__wrapper\">\n        <button\n          onClick={toggleMenu}\n          type=\"button\"\n          className=\"icon-button toggle\"\n        >\n          {label}\n          <i className=\"material-icons\">more_vert</i>\n        </button>\n        <div className={`more-menu ${toggled}`}>\n          <ul className=\"more-menu__list\">\n            <li className=\"more-menu__list-item\">\n              {React.Children.map(\n                children,\n                (child: any): JSX.Element => React.cloneElement(child)\n              )}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\nDropdown.defaultProps = {\n  children: [],\n  label: \"Menu\"\n};\nexport default Dropdown;\n"],"mappings":"AAAA","sourceRoot":""}