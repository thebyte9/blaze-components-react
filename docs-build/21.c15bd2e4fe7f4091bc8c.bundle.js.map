{"version":3,"file":"21.c15bd2e4fe7f4091bc8c.bundle.js","sources":["webpack:///./packages/Progress/src/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\ninterface IProgressProps {\n  progress: number;\n  type?: string | any;\n  steps: any[];\n  onChange: (...args: any[]) => any;\n}\nconst Progress: React.SFC<IProgressProps> = ({\n  progress,\n  steps,\n  type,\n  onChange\n}) => {\n  const [currentProgress, setProgress] = useState(progress);\n  const handleClick = ({ event, step }: { event: any; step: any }) => {\n    setProgress(step);\n    onChange({ event, step });\n  };\n  const checkStep = (step: any) => {\n    if (step === steps.length && step === currentProgress) {\n      return \"final current\";\n    }\n    if (step === currentProgress) {\n      return \"current\";\n    }\n    if (step === steps.length) {\n      return \"final\";\n    }\n    if (step <= currentProgress) {\n      return \"visited\";\n    }\n    return \"\";\n  };\n  const isTypeCount = type === \"count\" ? \"progress-bar__list-item--dots\" : \"\";\n  const modifiers = () => {\n    const allModifiers = type.split(\" \");\n    const blockElement = \"progress-bar__list-item--\";\n    if (!allModifiers.length) {\n      return `${blockElement}${type}`;\n    }\n    return allModifiers\n      .map((modifier: string) => `${blockElement}${modifier}`)\n      .join(\" \");\n  };\n  return (\n    <nav className=\"progress-bar\">\n      <ol className=\"progress-bar__list\">\n        {steps.map((text, index) => (\n          <li\n            key={text}\n            className={`progress-bar__list-item ${modifiers()} ${isTypeCount} ${checkStep(\n              index + 1\n            )}`}\n          >\n            <span\n              onClick={event => handleClick({ event, step: index + 1 })}\n              role=\"button\"\n            >\n              {text}\n            </span>\n          </li>\n        ))}\n      </ol>\n    </nav>\n  );\n};\nProgress.defaultProps = {\n  onChange: (): void => {\n    return;\n  },\n  progress: 0,\n  steps: [],\n  type: \"dots\"\n};\nexport default Progress;\n"],"mappings":"AAAA","sourceRoot":""}