{"version":3,"file":"9.424afcca0146256063df.bundle.js","sources":["webpack:///./packages/Alert/src/index.tsx"],"sourcesContent":["import Button from \"@blaze-react/button\";\nimport WithUtils from \"@blaze-react/utils\";\nimport React, { Fragment, FunctionComponent, useState } from \"react\";\ninterface IAlertProps {\n  icon?: string;\n  type?: string;\n  close?: boolean;\n  utils: {\n    classNames: (...args: any) => string;\n  };\n  children?: JSX.Element | string;\n}\n\nconst Alert: FunctionComponent<IAlertProps> = ({\n  children,\n  close,\n  icon,\n  type,\n  utils: { classNames },\n  ...attrs\n}): JSX.Element => {\n  const [offModal, setModalOff] = useState<boolean>(false);\n\n  const alertClassName: string = classNames(\"alert\", {\n    \"alert--dismissable\": close,\n    \"alert--icon\": !!icon,\n    [`alert--${type}`]: !!type\n  });\n\n  const renderAlert = (\n    <div className={alertClassName} {...attrs}>\n      {icon && <i className=\"material-icons\">{icon}</i>}\n      {children}\n      {close && (\n        <Button\n          onClick={() => setModalOff(true)}\n          className=\"icon-button icon-button--close\"\n        >\n          <i className=\"material-icons\">close</i>\n        </Button>\n      )}\n    </div>\n  );\n  return <Fragment>{!offModal && renderAlert}</Fragment>;\n};\nAlert.defaultProps = {\n  children: \"No content\",\n  close: false,\n  icon: \"\",\n  type: \"\"\n};\nexport default WithUtils(Alert);\n"],"mappings":"AAAA","sourceRoot":""}