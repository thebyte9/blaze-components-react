// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DraftEditor component should be defined and renders correctly (snapshot) 1`] = `
<Fragment>
  <BlockControls
    editorState={
      EditorState {
        "_immutable": Immutable.Record {
          "allowUndo": true,
          "currentContent": Immutable.Record {
            "entityMap": Object {
              "__add": [Function],
              "__create": [Function],
              "__get": [Function],
              "__getLastCreatedEntityKey": [Function],
              "__mergeData": [Function],
              "__replaceData": [Function],
              "add": [Function],
              "create": [Function],
              "get": [Function],
              "getLastCreatedEntityKey": [Function],
              "mergeData": [Function],
              "replaceData": [Function],
            },
            "blockMap": Immutable.OrderedMap {
              "3cmdi": Immutable.Record {
                "key": "3cmdi",
                "type": "unstyled",
                "text": "",
                "characterList": Immutable.List [],
                "depth": 0,
                "data": Immutable.Map {},
              },
            },
            "selectionBefore": Immutable.Record {
              "anchorKey": "3cmdi",
              "anchorOffset": 0,
              "focusKey": "3cmdi",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
            "selectionAfter": Immutable.Record {
              "anchorKey": "3cmdi",
              "anchorOffset": 0,
              "focusKey": "3cmdi",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
          },
          "decorator": null,
          "directionMap": Immutable.OrderedMap {
            "3cmdi": "LTR",
          },
          "forceSelection": false,
          "inCompositionMode": false,
          "inlineStyleOverride": null,
          "lastChangeType": null,
          "nativelyRenderedContent": null,
          "redoStack": Immutable.Stack [],
          "selection": Immutable.Record {
            "anchorKey": "3cmdi",
            "anchorOffset": 0,
            "focusKey": "3cmdi",
            "focusOffset": 0,
            "isBackward": false,
            "hasFocus": false,
          },
          "treeMap": Immutable.OrderedMap {
            "3cmdi": Immutable.List [
              Immutable.Record {
                "start": 0,
                "end": 0,
                "decoratorKey": null,
                "leaves": Immutable.List [
                  Immutable.Record {
                    "start": 0,
                    "end": 0,
                  },
                ],
              },
            ],
          },
          "undoStack": Immutable.Stack [],
        },
      }
    }
    onToggle={[Function]}
  />
  <InlineControls
    editorState={
      EditorState {
        "_immutable": Immutable.Record {
          "allowUndo": true,
          "currentContent": Immutable.Record {
            "entityMap": Object {
              "__add": [Function],
              "__create": [Function],
              "__get": [Function],
              "__getLastCreatedEntityKey": [Function],
              "__mergeData": [Function],
              "__replaceData": [Function],
              "add": [Function],
              "create": [Function],
              "get": [Function],
              "getLastCreatedEntityKey": [Function],
              "mergeData": [Function],
              "replaceData": [Function],
            },
            "blockMap": Immutable.OrderedMap {
              "3cmdi": Immutable.Record {
                "key": "3cmdi",
                "type": "unstyled",
                "text": "",
                "characterList": Immutable.List [],
                "depth": 0,
                "data": Immutable.Map {},
              },
            },
            "selectionBefore": Immutable.Record {
              "anchorKey": "3cmdi",
              "anchorOffset": 0,
              "focusKey": "3cmdi",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
            "selectionAfter": Immutable.Record {
              "anchorKey": "3cmdi",
              "anchorOffset": 0,
              "focusKey": "3cmdi",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
          },
          "decorator": null,
          "directionMap": Immutable.OrderedMap {
            "3cmdi": "LTR",
          },
          "forceSelection": false,
          "inCompositionMode": false,
          "inlineStyleOverride": null,
          "lastChangeType": null,
          "nativelyRenderedContent": null,
          "redoStack": Immutable.Stack [],
          "selection": Immutable.Record {
            "anchorKey": "3cmdi",
            "anchorOffset": 0,
            "focusKey": "3cmdi",
            "focusOffset": 0,
            "isBackward": false,
            "hasFocus": false,
          },
          "treeMap": Immutable.OrderedMap {
            "3cmdi": Immutable.List [
              Immutable.Record {
                "start": 0,
                "end": 0,
                "decoratorKey": null,
                "leaves": Immutable.List [
                  Immutable.Record {
                    "start": 0,
                    "end": 0,
                  },
                ],
              },
            ],
          },
          "undoStack": Immutable.Stack [],
        },
      }
    }
    onToggle={[Function]}
  />
  <DraftEditor
    blockRenderMap={
      Immutable.Map {
        "ordered-list-item": Object {
          "element": "li",
          "wrapper": <ol
            className="public-DraftStyleDefault-ol"
          />,
        },
        "header-six": Object {
          "element": "h6",
        },
        "header-four": Object {
          "element": "h4",
        },
        "header-one": Object {
          "element": "h1",
        },
        "unordered-list-item": Object {
          "element": "li",
          "wrapper": <ul
            className="public-DraftStyleDefault-ul"
          />,
        },
        "atomic": Object {
          "element": "figure",
        },
        "unstyled": Object {
          "aliasedElements": Array [
            "p",
          ],
          "element": "div",
        },
        "header-two": Object {
          "element": "h2",
        },
        "code-block": Object {
          "element": "pre",
          "wrapper": <pre
            className="public-DraftStyleDefault-pre"
          />,
        },
        "blockquote": Object {
          "element": "blockquote",
        },
        "header-five": Object {
          "element": "h5",
        },
        "header-three": Object {
          "element": "h3",
        },
      }
    }
    blockRendererFn={[Function]}
    blockStyleFn={[Function]}
    editorState={
      EditorState {
        "_immutable": Immutable.Record {
          "allowUndo": true,
          "currentContent": Immutable.Record {
            "entityMap": Object {
              "__add": [Function],
              "__create": [Function],
              "__get": [Function],
              "__getLastCreatedEntityKey": [Function],
              "__mergeData": [Function],
              "__replaceData": [Function],
              "add": [Function],
              "create": [Function],
              "get": [Function],
              "getLastCreatedEntityKey": [Function],
              "mergeData": [Function],
              "replaceData": [Function],
            },
            "blockMap": Immutable.OrderedMap {
              "3cmdi": Immutable.Record {
                "key": "3cmdi",
                "type": "unstyled",
                "text": "",
                "characterList": Immutable.List [],
                "depth": 0,
                "data": Immutable.Map {},
              },
            },
            "selectionBefore": Immutable.Record {
              "anchorKey": "3cmdi",
              "anchorOffset": 0,
              "focusKey": "3cmdi",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
            "selectionAfter": Immutable.Record {
              "anchorKey": "3cmdi",
              "anchorOffset": 0,
              "focusKey": "3cmdi",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
          },
          "decorator": null,
          "directionMap": Immutable.OrderedMap {
            "3cmdi": "LTR",
          },
          "forceSelection": false,
          "inCompositionMode": false,
          "inlineStyleOverride": null,
          "lastChangeType": null,
          "nativelyRenderedContent": null,
          "redoStack": Immutable.Stack [],
          "selection": Immutable.Record {
            "anchorKey": "3cmdi",
            "anchorOffset": 0,
            "focusKey": "3cmdi",
            "focusOffset": 0,
            "isBackward": false,
            "hasFocus": false,
          },
          "treeMap": Immutable.OrderedMap {
            "3cmdi": Immutable.List [
              Immutable.Record {
                "start": 0,
                "end": 0,
                "decoratorKey": null,
                "leaves": Immutable.List [
                  Immutable.Record {
                    "start": 0,
                    "end": 0,
                  },
                ],
              },
            ],
          },
          "undoStack": Immutable.Stack [],
        },
      }
    }
    handleKeyCommand={[Function]}
    keyBindingFn={[Function]}
    onChange={[Function]}
    readOnly={false}
    spellCheck={false}
    stripPastedStyles={false}
  />
</Fragment>
`;
