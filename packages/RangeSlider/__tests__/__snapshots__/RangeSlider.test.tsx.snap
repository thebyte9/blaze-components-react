// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RangeSlider component should be defined and renders correctly (snapshot) 1`] = `
<withUtils(RangeSlider)
  maxValue={20}
  minValue={0}
  onChange={[Function]}
  value={12}
>
  <RangeSlider
    allowSameValues={false}
    disabled={false}
    draggableTrack={false}
    maxValue={20}
    minValue={0}
    name=""
    onChange={[Function]}
    step={1}
    utils={
      Object {
        "ErrorMessage": [Function],
        "classNames": [Function],
        "parseTextBlock": [Function],
        "removeExtraSpaces": [Function],
        "uniqueId": [Function],
      }
    }
    value={12}
  >
    <InputRange
      allowSameValues={false}
      classNames={
        Object {
          "activeTrack": "input-range__track input-range__track--active",
          "disabledInputRange": "input-range input-range--disabled",
          "inputRange": "input-range",
          "labelContainer": "input-range__label-container",
          "maxLabel": "input-range__label input-range__label--max",
          "minLabel": "input-range__label input-range__label--min",
          "slider": "input-range__slider",
          "sliderContainer": "input-range__slider-container",
          "track": "input-range__track input-range__track--background",
          "valueLabel": "input-range__label input-range__label--value",
        }
      }
      disabled={false}
      draggableTrack={false}
      maxValue={20}
      minValue={0}
      name=""
      onChange={[Function]}
      step={1}
      value={12}
    >
      <div
        aria-disabled={false}
        className="input-range"
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onTouchStart={[Function]}
      >
        <Label
          classNames={
            Object {
              "activeTrack": "input-range__track input-range__track--active",
              "disabledInputRange": "input-range input-range--disabled",
              "inputRange": "input-range",
              "labelContainer": "input-range__label-container",
              "maxLabel": "input-range__label input-range__label--max",
              "minLabel": "input-range__label input-range__label--min",
              "slider": "input-range__slider",
              "sliderContainer": "input-range__slider-container",
              "track": "input-range__track input-range__track--background",
              "valueLabel": "input-range__label input-range__label--value",
            }
          }
          type="min"
        >
          <span
            className="input-range__label input-range__label--min"
          >
            <span
              className="input-range__label-container"
            >
              0
            </span>
          </span>
        </Label>
        <Track
          classNames={
            Object {
              "activeTrack": "input-range__track input-range__track--active",
              "disabledInputRange": "input-range input-range--disabled",
              "inputRange": "input-range",
              "labelContainer": "input-range__label-container",
              "maxLabel": "input-range__label input-range__label--max",
              "minLabel": "input-range__label input-range__label--min",
              "slider": "input-range__slider",
              "sliderContainer": "input-range__slider-container",
              "track": "input-range__track input-range__track--background",
              "valueLabel": "input-range__label input-range__label--value",
            }
          }
          draggableTrack={false}
          onTrackDrag={[Function]}
          onTrackMouseDown={[Function]}
          percentages={
            Object {
              "max": 0.6,
              "min": 0,
            }
          }
        >
          <div
            className="input-range__track input-range__track--background"
            onMouseDown={[Function]}
            onTouchStart={[Function]}
          >
            <div
              className="input-range__track input-range__track--active"
              style={
                Object {
                  "left": "0%",
                  "width": "60%",
                }
              }
            />
            <Slider
              classNames={
                Object {
                  "activeTrack": "input-range__track input-range__track--active",
                  "disabledInputRange": "input-range input-range--disabled",
                  "inputRange": "input-range",
                  "labelContainer": "input-range__label-container",
                  "maxLabel": "input-range__label input-range__label--max",
                  "minLabel": "input-range__label input-range__label--min",
                  "slider": "input-range__slider",
                  "sliderContainer": "input-range__slider-container",
                  "track": "input-range__track input-range__track--background",
                  "valueLabel": "input-range__label input-range__label--value",
                }
              }
              key="max"
              maxValue={20}
              minValue={0}
              onSliderDrag={[Function]}
              onSliderKeyDown={[Function]}
              percentage={0.6}
              type="max"
              value={12}
            >
              <span
                className="input-range__slider-container"
                style={
                  Object {
                    "left": "60%",
                    "position": "absolute",
                  }
                }
              >
                <Label
                  classNames={
                    Object {
                      "activeTrack": "input-range__track input-range__track--active",
                      "disabledInputRange": "input-range input-range--disabled",
                      "inputRange": "input-range",
                      "labelContainer": "input-range__label-container",
                      "maxLabel": "input-range__label input-range__label--max",
                      "minLabel": "input-range__label input-range__label--min",
                      "slider": "input-range__slider",
                      "sliderContainer": "input-range__slider-container",
                      "track": "input-range__track input-range__track--background",
                      "valueLabel": "input-range__label input-range__label--value",
                    }
                  }
                  type="value"
                >
                  <span
                    className="input-range__label input-range__label--value"
                  >
                    <span
                      className="input-range__label-container"
                    >
                      12
                    </span>
                  </span>
                </Label>
                <div
                  aria-valuemax={20}
                  aria-valuemin={0}
                  aria-valuenow={12}
                  className="input-range__slider"
                  draggable="false"
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onTouchStart={[Function]}
                  role="slider"
                  tabIndex="0"
                />
              </span>
            </Slider>
          </div>
        </Track>
        <Label
          classNames={
            Object {
              "activeTrack": "input-range__track input-range__track--active",
              "disabledInputRange": "input-range input-range--disabled",
              "inputRange": "input-range",
              "labelContainer": "input-range__label-container",
              "maxLabel": "input-range__label input-range__label--max",
              "minLabel": "input-range__label input-range__label--min",
              "slider": "input-range__slider",
              "sliderContainer": "input-range__slider-container",
              "track": "input-range__track input-range__track--background",
              "valueLabel": "input-range__label input-range__label--value",
            }
          }
          type="max"
        >
          <span
            className="input-range__label input-range__label--max"
          >
            <span
              className="input-range__label-container"
            >
              20
            </span>
          </span>
        </Label>
      </div>
    </InputRange>
  </RangeSlider>
</withUtils(RangeSlider)>
`;
