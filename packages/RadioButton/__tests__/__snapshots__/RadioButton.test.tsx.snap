// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RadioButton component should be defined and renders correctly (snapshot) 1`] = `
<withUtils(RadioButton)
  onChange={[Function]}
  options={
    Array [
      Object {
        "id": "one",
        "label": "Example",
        "value": 1,
      },
      Object {
        "id": "two",
        "label": "I accept",
        "required": true,
        "value": "accepted",
      },
      Object {
        "disabled": true,
        "id": "three",
        "label": "Disabled",
        "value": "",
      },
    ]
  }
  required={true}
>
  <RadioButton
    error={false}
    onChange={[Function]}
    options={
      Array [
        Object {
          "id": "one",
          "label": "Example",
          "value": 1,
        },
        Object {
          "id": "two",
          "label": "I accept",
          "required": true,
          "value": "accepted",
        },
        Object {
          "disabled": true,
          "id": "three",
          "label": "Disabled",
          "value": "",
        },
      ]
    }
    required={true}
    utils={
      Object {
        "ErrorMessage": [Function],
        "classNames": [Function],
        "parseTextBlock": [Function],
        "removeExtraSpaces": [Function],
        "uniqueId": [Function],
      }
    }
    validationMessage="This field is required"
  >
    <span
      className="required"
    />
    <div
      className="form-field form-field--radio"
      key="Example"
      onClick={[Function]}
      role="button"
    >
      <input
        checked={false}
        className="form-radio"
        id="one"
        readOnly={true}
        type="radio"
        value={1}
      />
      <label
        htmlFor="one"
      >
        Example
      </label>
    </div>
    <div
      className="form-field form-field--radio"
      key="I accept"
      onClick={[Function]}
      role="button"
    >
      <input
        checked={false}
        className="form-radio"
        id="two"
        readOnly={true}
        type="radio"
        value="accepted"
      />
      <label
        htmlFor="two"
      >
        I accept
      </label>
    </div>
    <div
      className="form-field form-field--radio"
      key="Disabled"
      onClick={[Function]}
      role="button"
    >
      <input
        checked={false}
        className="form-radio"
        disabled={true}
        id="three"
        readOnly={true}
        type="radio"
        value=""
      />
      <label
        htmlFor="three"
      >
        Disabled
      </label>
    </div>
  </RadioButton>
</withUtils(RadioButton)>
`;
